:root {
  --c-text: rgba(17, 17, 17, 1);
  --c-background: rgba(238, 238, 238, 1);
  --c-alternative: rgba(0, 85, 255, 1);
  --c-alternative-transparent: rgba(0, 85, 255, 0);
  --c-dark-text: rgba(17, 17, 17, 1);
  --c-dark-background: rgba(238, 238, 238, 1);
  --c-dark-alternative: rgba(229, 39, 157, 1);
  --c-dark-alternative-transparent: rgba(229, 39, 157, 0);
}

@media (prefers-color-scheme: dark) {
  :root {
    --c-text: rgba(238, 238, 238, 1);
    --c-background: rgba(17, 17, 17, 1);
    --c-alternative: rgba(229, 39, 157, 1);
    --c-alternative-transparent: rgba(229, 39, 157, 0);
    --c-dark-text: rgba(17, 17, 17, 1);
    --c-dark-background: rgba(238, 238, 238, 1);
    --c-dark-alternative: rgba(0, 85, 255, 1);
    --c-dark-alternative-transparent: rgba(0, 85, 255, 0);
  }
}

.dark-mode-checkbox:checked ~ .container {
  --c-text: var(--c-dark-text);
  --c-background: var(--c-dark-background);
  --c-alternative: var(--c-dark-alternative);
  --c-alternative-transparent: var(--c-dark-alternative-transparent);
}

::selection, ::-moz-selection {
  background: var(--c-alternative);
  color: var(--c-background);
}

*, *::after, *::before {
  box-sizing: border-box
}

body, html {
  height: 100%;
  margin: 0;
  overflow: hidden;
}

.container {
  font-family: iosevka, courier new, mono, monospace;
  line-height: 1.6;
  position: relative;
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  justify-content: center;
  -ms-align-items: center;
  align-items: center;
  background-color: var(--c-background);
  height: 100vh;
  padding: 0;
  margin: 0;
  overflow: hidden
}

.label {
  display: inline-block;
  margin-bottom: 10px;
}

.page-button {
  cursor: pointer;
  user-select: none;
}

.content {
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;
  -webkit-flex-direction: column;
  flex-direction: column;
  -ms-align-items: center;
  align-items: center;
  flex-grow: 1;
  color: var(--c-text);
  z-index: 100;
  overflow: scroll;
  position: relative;
}

.content2 {
  width: 100vw;
  padding-left: calc((100vw - 800px) / 2);
  padding-right: calc((100vw - 800px) / 2);
}

.lighth {
  position: relative;
  background-color: var(--c-background);
  height: 600px;
  width: 250%;
  perspective: 100px;
  max-height: 300px;  
  min-height: 300px;
  overflow: hidden;
}

/* max height will be either 300px or if that is greater than 20% then 20% */
@media (max-height: 1500px) {
  .lighth {
    max-height: 20%;    
    min-height: 20%;
  }
}

.lighth::before {
  content: '';
  position: absolute;
  background: linear-gradient(0, transparent, var(--c-background));
  top: 0;
  right: -100vh;
  left: -100vh;
  height: 100px;
  z-index: 99
}
.lightv {
  position: relative;
  background-color: var(--c-background);
  color: var(--c-alternative);
  height: 100%;
  width: 100%;
  transform: rotateX(25deg);
}
.lightv::before {
  content: '';
  position: absolute;
  background-color: currentColor;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  top: -100vh;
  bottom: -100vh;
  left: 50%;
  width: 10px;
  box-shadow: -140px 0 0 currentColor, -290px 0 0 currentColor, -440px 0 0 currentColor, -590px 0 0 currentColor, -740px 0 0 currentColor, -890px 0 0 currentColor, -1040px 0 0 currentColor, -1190px 0 0 currentColor, -1450px 0 0 currentColor, -1700px 0 0 currentColor, -1950px 0 0 currentColor,
    140px 0 0 currentColor, 290px 0 0 currentColor, 440px 0 0 currentColor, 590px 0 0 currentColor, 740px 0 0 currentColor, 890px 0 0 currentColor, 1040px 0 0 currentColor, 1190px 0 0 currentColor, 1450px 0 0 currentColor, 1700px 0 0 currentColor, 1950px 0 0 currentColor
}
.lightv::after {
  content: '';
  position: absolute;
  background-color: currentColor;
  top: 0;
  right: -100vh;

  left: -100vh;
  height: 10px;
  box-shadow: 0 100px 0 0 currentColor, 0 200px 0 currentColor, 0 300px currentColor,
    0 -100px 0 0 currentColor, 0 -200px 0 currentColor, 0 -300px currentColor;

  animation: lightv 1s linear infinite;
}
@keyframes lightv {
  from {
    transform: translateY(0)
  }
  to {
    transform: translateY(100px)
  }
}

svg {
	font-family: monospace;
	position: relative; 
  margin: 20px;
}
svg path {
	animation: stroke 5s infinite alternate;
	stroke-width: 3;
	stroke: #e5279d;
	font-size: 140px;
}
@keyframes stroke {
	0%   {
		fill: var(--c-alternative-transparent); stroke: var(--c-alternative);
		stroke-dashoffset: 25%; stroke-dasharray: 0 50%; stroke-width: 3;
	}
	70%  {fill: var(--c-alternative-transparent); stroke: var(--c-alternative); }
	80%  {fill: var(--c-alternative-transparent); stroke: var(--c-alternative); stroke-width: 3; }
	100% {
		fill: var(--c-alternative); stroke: var(--c-alternative-transparent); 
		stroke-dashoffset: -25%; stroke-dasharray: 50% 0; stroke-width: 3;
	}
}

p {
  color: var(--c-text);
  text-align: justify;
  text-justify: inter-word;
  position: relative;
  z-index: 400;
}

 /* Hide scrollbar for Chrome, Safari and Opera */
.content::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.content {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
} 

.content{
  -webkit-mask-image: linear-gradient(to top, transparent 0%, var(--c-background) 15%);
  mask-image: linear-gradient(to top, transparent 0%, var(--c-background) 15%);
  -webkit-mask-composite: destination-out;
  mask-composite: destination-out;
  padding-bottom: 5%;
}

#container {
  margin: 0 auto;
  max-width: 890px;
}

[id^=drop] {
 display: none;
}

#menu-content {
    position: relative;
}

#drop:checked ~ #menu #menu-content::after {
    content: "-";
    position: absolute;
    left: 100%;       /* This will place the '-' right after the text content */
    top: 0;           /* This will align it to the top of the text */
    margin-left: 5px; /* Optional: for some spacing between the text and '-' */
}

nav {
  margin: 0;
  padding: 0;
  background-color: var(--c-alternative);
  width: 100%;

}

.nav-content {

    display: flex;
  justify-content: center;
}


nav:after {
  content: "";
  display: table;
  clear: both;
}

nav ul {
  padding: 0;
  margin: 0;
  list-style: none;
  position: relative;
  z-index: 200;
}

nav ul li {
  margin: 0px;
  display: inline-block;
  float: left;
  background-color: var(--c-alternative);
  z-index: 200;
}

nav a, nav label {
  display: block;
  padding: 0 20px;
  color: var(--c-dark-background);
  font-size: 20px;
  line-height: 60px;
  text-decoration: none;
}

nav label > a {
    padding: 0; /* This removes the padding from <a> inside <label> */
}

nav label {
    color: var(--c-dark-background);
}

nav ul ul {
  display: none;
  position: absolute;
  top: 60px;
}

@media not all and (pointer: coarse) { /* no hover on touch devices */
  nav ul li:hover > ul { display: inherit; }
}

nav ul ul li {
  width: 250px;
  float: none;
  display: list-item;
  position: relative;
  z-index: 200;
}

nav ul ul ul li {
  position: relative;
  top: -60px;
  left: 170px;
  z-index: 200;
}

li > a:only-child:after { content: ''; }


nav a:hover,
 nav ul ul ul a { 
 user-select: none;
  }
  
@media not all and (pointer: coarse) { /* no hover on touch devices */
  nav a:hover, nav label:hover {
   text-decoration: underline;
    text-decoration-thickness: 2px;
      text-decoration-color: var(--c-dark-background);
    text-underline-offset: 5px;
  }
}
 
.toggle {
  display: inline-flex;
  padding: 0 20px;
  font-size: 20px;
  line-height: 60px;
  text-decoration: none;
  border: none;
  justify-content: flex-end;
}
  
@media not all and (pointer: coarse) { /* no hover on touch devices */
  .toggle:hover { 
    background-color: var(--c-alternative); 
    cursor: pointer; 
      user-select: none;
     text-decoration: underline;
    text-decoration-thickness: 2px;
      text-decoration-color: var(--c-dark-background);
    text-underline-offset: 5px;
  }
}

#menu {
  display: none;
}

/* Single page stuff
--------------------------------------------- */

.homepage.page {
  display: block; /* The homepage is displayed by default */
}

.page {
  display: none;
}

.page:target {
  display: block; /* When an id is targeted, show that page */
}

.page:target ~ .homepage.page {
  display: none; /* When an id is targeted, hide the homepage */
}

/* This CSS rule will add invisible content before every element that gets targeted by a hash link, effectively pushing the actual content down the page by a fixed amount. */
:target::before {
  content: "";
  display: block;
  height: 1000px; /* Fixed header height*/
  margin: -1000px 0 0; /* Negative fixed header height */
}


/* Stop bottom of bage fading out */
.bottom {
  padding-bottom: 100px;
}

/* --------------------------------------------- */
  
a {
  color: var(--c-text);
  z-index: 500;
}
  

/* Media Queries
--------------------------------------------- */

@media all and (max-width : 768px) {

.content2 {
  max-width: 90vw;
}

svg {
	max-width: 100vw;
	padding: 10px;
}

.nav-content {
  display: flex;
}

nav { margin: 0; }


}

@media all and (max-width : 349px) {
  nav ul li {
    display: block;
    width: 100%;
  }
  .nav-content {
  min-height: 160px; /* 60 (per box) * 4 */
  margin-top: 10px;  
  margin-bottom: 10px;
  }
  
  nav a, nav label {
    line-height: 40px;
  }
}

.preOuter {
  border: 2px solid var(--c-text);
  padding: 0px 15px 0px 15px;
  background-color: #222;
  overflow-x: auto;
  scrollbar-color: #eee #222;
}

pre {
font-family: courier new, mono, monospace; font-size: 16px; line-height: 28.8px; 300ch 28.8px ; background-repeat: no-repeat;color: transparent; background-size: 300ch 28.8px; background-clip: text;
}


